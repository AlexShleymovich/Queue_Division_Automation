{"ast":null,"code":"var _jsxFileName = \"/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport FormInput from \"./FormInput\";\nimport { Container, Header, Error } from \"./Styles/Login.styled\";\nimport StrButton from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [loginError, setLoginError] = useState();\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n    company_code: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"username\",\n    type: \"text\",\n    label: \"Username\"\n  }, {\n    id: 2,\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\"\n  }, {\n    id: 3,\n    name: \"company_code\",\n    type: \"text\",\n    label: \"Company Code\"\n  }];\n\n  async function onClickHandler() {\n    console.log(values);\n    await fetch(\"http://127.0.0.1:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: values.username,\n        password: values.password,\n        company_code: values.company_code\n      })\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        setLoginError(\"Bad Username or Password\");\n      }\n    }).then(data => {\n      sessionStorage.setItem(\"token\", data.access_token);\n    });\n  }\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n    setLoginError();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Error, {\n        children: loginError ? loginError : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, {\n        type: input.type,\n        name: input.name,\n        label: input.label,\n        value: values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(StrButton, {\n        onClick: onClickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"TxUJCVpC725Xi4Rna5qy7KyioZM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","FormInput","Container","Header","Error","StrButton","Login","loginError","setLoginError","values","setValues","username","password","company_code","inputs","id","name","type","label","onClickHandler","console","log","fetch","method","headers","body","JSON","stringify","then","response","status","json","data","sessionStorage","setItem","access_token","onChange","e","target","value","map","input"],"sources":["/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/Login.js"],"sourcesContent":["import { useState } from \"react\";\nimport FormInput from \"./FormInput\";\nimport { Container, Header, Error } from \"./Styles/Login.styled\";\nimport StrButton from \"./Button\";\n\nconst Login = () => {\n  const [loginError, setLoginError] = useState();\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n    company_code: \"\",\n  });\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"username\",\n      type: \"text\",\n      label: \"Username\",\n    },\n    {\n      id: 2,\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n    },\n    {\n      id: 3,\n      name: \"company_code\",\n      type: \"text\",\n      label: \"Company Code\",\n    },\n  ];\n\n  async function onClickHandler() {\n    console.log(values);\n    await fetch(\"http://127.0.0.1:5000/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        username: values.username,\n        password: values.password,\n        company_code: values.company_code,\n      }),\n    })\n      .then((response) => {\n        if (response.status===200) {\n            return response.json();\n        }\n        else {\n            setLoginError(\"Bad Username or Password\")\n        }\n        \n      })\n      .then((data) => {\n        sessionStorage.setItem(\"token\", data.access_token)\n      })\n  }\n\n  const onChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n    setLoginError();\n  };\n  return (\n    <Container>\n      <form>\n        <Header>Login</Header>\n        <Error>{loginError ? loginError : \"\"}</Error>\n        {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            type={input.type}\n            name={input.name}\n            label={input.label}\n            value={values[input.name]}\n            onChange={onChange}\n          />\n        ))}\n        <StrButton onClick={onClickHandler} />\n      </form>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}