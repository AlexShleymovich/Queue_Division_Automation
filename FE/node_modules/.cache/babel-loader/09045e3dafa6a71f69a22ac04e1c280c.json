{"ast":null,"code":"var _jsxFileName = \"/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport FormInput from \"./FormInput\";\nimport { Container } from \"./Styles/Login.styled\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"./Context\";\nimport Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport { Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [loginError, setLoginError] = useState(false);\n  const {\n    setUserToken\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n    company_code: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"username\",\n    type: \"text\",\n    label: \"Username\"\n  }, {\n    id: 2,\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\"\n  }, {\n    id: 3,\n    name: \"company_code\",\n    type: \"text\",\n    label: \"Company Code\"\n  }];\n\n  async function onClickHandler() {\n    const response = await fetch(\"http://127.0.0.1:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: values.username,\n        password: values.password,\n        company_code: values.company_code\n      })\n    });\n\n    if (!response.ok) {\n      setLoginError(true);\n    } else {\n      const data = await response.json();\n      sessionStorage.setItem(\"token\", data.access_token);\n      setUserToken(data.access_token);\n      navigate(\"/main\");\n    }\n  }\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n    setLoginError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        sx: {\n          pt: \"3px\",\n          m: \"auto\",\n          fontWeight: \"400\",\n          fontSize: \"50px\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), loginError && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: \"10px\",\n          mt: \"10px\"\n        },\n        children: \"Wrong Username or Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, {\n        type: input.type,\n        name: input.name,\n        label: input.label,\n        value: values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        onClick: onClickHandler,\n        sx: {\n          mb: \"15px\",\n          mt: \"5px\",\n          height: 45,\n          width: 170,\n          fontSize: 23\n        },\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"x6yRlAJLitPapYBBosmeq/KflpI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useContext","FormInput","Container","useNavigate","UserContext","Alert","Button","Typography","Login","loginError","setLoginError","setUserToken","navigate","values","setValues","username","password","company_code","inputs","id","name","type","label","onClickHandler","response","fetch","method","headers","body","JSON","stringify","ok","data","json","sessionStorage","setItem","access_token","onChange","e","target","value","pt","m","fontWeight","fontSize","mb","mt","map","input","height","width"],"sources":["/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/Login.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport FormInput from \"./FormInput\";\nimport { Container} from \"./Styles/Login.styled\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"./Context\";\nimport Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport { Typography } from \"@mui/material\";\n\nconst Login = () => {\n  const [loginError, setLoginError] = useState(false);\n  const { setUserToken } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n    company_code: \"\",\n  });\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"username\",\n      type: \"text\",\n      label: \"Username\",\n    },\n    {\n      id: 2,\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n    },\n    {\n      id: 3,\n      name: \"company_code\",\n      type: \"text\",\n      label: \"Company Code\",\n    },\n  ];\n\n  async function onClickHandler() {\n    const response = await fetch(\"http://127.0.0.1:5000/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        username: values.username,\n        password: values.password,\n        company_code: values.company_code,\n      }),\n    });\n    if (!response.ok) {\n      setLoginError(true);\n    } else {\n      const data = await response.json();\n      sessionStorage.setItem(\"token\", data.access_token);\n      setUserToken(data.access_token);\n      navigate(\"/main\");\n    }\n  }\n\n  const onChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n    setLoginError(false);\n  };\n  return (\n    <Container>\n      <form>\n        <Typography\n          variant=\"h1\"\n          sx={{ pt: \"3px\", m: \"auto\", fontWeight: \"400\", fontSize: \"50px\" }}\n        >\n          Login\n        </Typography>\n\n        {loginError && (\n          <Alert severity=\"error\" sx={{mb:\"10px\", mt:\"10px\"}}>Wrong Username or Password</Alert>\n        )}\n        {inputs.map((input) => (\n          <FormInput\n            key={input.id}\n            type={input.type}\n            name={input.name}\n            label={input.label}\n            value={values[input.name]}\n            onChange={onChange}\n          />\n        ))}\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          onClick={onClickHandler}\n          sx={{ mb: \"15px\", mt: \"5px\", height: 45, width: 170, fontSize: 23 }}\n        >\n          Start\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}