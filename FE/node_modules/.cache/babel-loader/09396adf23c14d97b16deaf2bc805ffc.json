{"ast":null,"code":"var _jsxFileName = \"/Users/alexshle/Desktop/Alex/Python/my_app_test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MyButton from \"./Components/Button\";\nimport Items from \"./Components/Items\";\nimport { Container } from \"./Components/Styles/App.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [myData, setMyData] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n\n  const parsedDataHandler = parsedData => {\n    if (parsedData === null) {\n      setMyData(myData);\n      console.log(myData);\n    } else {\n      setMyData(parsedData);\n    }\n\n    setIsClicked(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      parsedData: parsedDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), isClicked && /*#__PURE__*/_jsxDEV(Items, {\n      data: myData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"1wMKeborWvW0/YNEu4OgaPbqgZE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MyButton","Items","Container","App","myData","setMyData","isClicked","setIsClicked","parsedDataHandler","parsedData","console","log"],"sources":["/Users/alexshle/Desktop/Alex/Python/my_app_test/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MyButton from \"./Components/Button\";\nimport Items from \"./Components/Items\";\nimport { Container } from \"./Components/Styles/App.styled\";\n\nconst App = () => {\n  const [myData, setMyData] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n\n\n  const parsedDataHandler = (parsedData) => {\n    if (parsedData === null) {\n      setMyData(myData);\n      console.log(myData);\n    } else {\n      setMyData(parsedData);\n    }\n    setIsClicked(true);\n  };\n\n  return (\n    <Container>\n      <MyButton parsedData={parsedDataHandler} />\n      {isClicked && <Items data={myData} />}\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,gCAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;EAGA,MAAMU,iBAAiB,GAAIC,UAAD,IAAgB;IACxC,IAAIA,UAAU,KAAK,IAAnB,EAAyB;MACvBJ,SAAS,CAACD,MAAD,CAAT;MACAM,OAAO,CAACC,GAAR,CAAYP,MAAZ;IACD,CAHD,MAGO;MACLC,SAAS,CAACI,UAAD,CAAT;IACD;;IACDF,YAAY,CAAC,IAAD,CAAZ;EACD,CARD;;EAUA,oBACE,QAAC,SAAD;IAAA,wBACE,QAAC,QAAD;MAAU,UAAU,EAAEC;IAAtB;MAAA;MAAA;MAAA;IAAA,QADF,EAEGF,SAAS,iBAAI,QAAC,KAAD;MAAO,IAAI,EAAEF;IAAb;MAAA;MAAA;MAAA;IAAA,QAFhB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CArBD;;GAAMD,G;;KAAAA,G;AAuBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}