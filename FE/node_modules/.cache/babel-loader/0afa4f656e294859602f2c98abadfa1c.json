{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport Shifter from \"./Shifter\";\nimport ShifterText from \"./ShifterText\";\nimport { Container, Tabs, TextTabs, Button, ButtonText } from \"./Styles/Items.styled\";\n\nconst Items = props => {// const [whoWork, setWhoWork] = useState(props.data);\n  // const [deletedShifter, setDeletedShifter] = useState(null);\n  // const [scheduleText, setScheduleText] = useState(null);\n  // useEffect(() => {\n  //   if (deletedShifter !== null) {\n  //     fetch(\"http://127.0.0.1:5000\", {\n  //       method: \"POST\",\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       body: JSON.stringify(deletedShifter),\n  //     })\n  //       .then((response) => {\n  //         return response.json();\n  //       })\n  //       .then((data) => {\n  //         setWhoWork(data);\n  //       });\n  //   }\n  // }, [deletedShifter]);\n  // async function onButtonClickHandler() {}\n  //   const { WebClient } = require(\"@slack/web-api\");\n  //   const client = new WebClient(\n  //     \"xoxb-63217127925-4111504931396-zeCzTsLRawTdBtxdwnIC3QCu\"\n  //   );\n  //   const channelId = \"G9UNDRZBR\";\n  //   try {\n  //     const result = await client.chat.postMessage({\n  //       channel: channelId,\n  //       text: JSON.stringify(scheduleText),\n  //     });\n  //     console.log(result);}\n  //     catch (error) {\n  //       console.error(error)\n  // }}\n  //   fetch(\n  //     \"https://hooks.slack.com/services/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\",\n  //     {\n  //       method: \"POST\",\n  //       headers: { \"Content-type\": \"application/x-www-form-urlencoded\" },\n  //       body: JSON.stringify({ text: scheduleText }),\n  //       redirect: \"follow\",\n  //     }\n  //   )\n  //     .then((response) => response.text())\n  //     .catch((error) => console.log(\"error\", error));\n  // };\n  // const onChangeHandler = (removedShifter) => {\n  //   setDeletedShifter(removedShifter);\n  // };\n  // const slackHandler = (text) => {\n  //   setScheduleText(text);\n  // };\n  // return (\n  //   <Container>\n  //     <Tabs>\n  //       <Shifter data={whoWork} onChange={onChangeHandler} />\n  //     </Tabs>\n  //     <TextTabs>\n  //       <ShifterText data={whoWork} slack={slackHandler} />\n  //     </TextTabs>\n  //     <Button onClick={onButtonClickHandler}>\n  //       <ButtonText> Send to Slack</ButtonText>\n  //     </Button>\n  //   </Container>\n  // );\n};\n\n_c = Items;\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"names":["React","useState","useEffect","Shifter","ShifterText","Container","Tabs","TextTabs","Button","ButtonText","Items","props"],"sources":["/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/Items.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Shifter from \"./Shifter\";\nimport ShifterText from \"./ShifterText\";\nimport {\n  Container,\n  Tabs,\n  TextTabs,\n  Button,\n  ButtonText,\n} from \"./Styles/Items.styled\";\n\nconst Items = (props) => {\n  // const [whoWork, setWhoWork] = useState(props.data);\n  // const [deletedShifter, setDeletedShifter] = useState(null);\n  // const [scheduleText, setScheduleText] = useState(null);\n\n  // useEffect(() => {\n  //   if (deletedShifter !== null) {\n  //     fetch(\"http://127.0.0.1:5000\", {\n  //       method: \"POST\",\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       body: JSON.stringify(deletedShifter),\n  //     })\n  //       .then((response) => {\n  //         return response.json();\n  //       })\n  //       .then((data) => {\n  //         setWhoWork(data);\n  //       });\n  //   }\n  // }, [deletedShifter]);\n\n  // async function onButtonClickHandler() {}\n\n  //   const { WebClient } = require(\"@slack/web-api\");\n  //   const client = new WebClient(\n  //     \"xoxb-63217127925-4111504931396-zeCzTsLRawTdBtxdwnIC3QCu\"\n  //   );\n  //   const channelId = \"G9UNDRZBR\";\n\n  //   try {\n  //     const result = await client.chat.postMessage({\n  //       channel: channelId,\n  //       text: JSON.stringify(scheduleText),\n  //     });\n  //     console.log(result);}\n  //     catch (error) {\n  //       console.error(error)\n  // }}\n\n  //   fetch(\n  //     \"https://hooks.slack.com/services/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\",\n  //     {\n  //       method: \"POST\",\n  //       headers: { \"Content-type\": \"application/x-www-form-urlencoded\" },\n  //       body: JSON.stringify({ text: scheduleText }),\n  //       redirect: \"follow\",\n  //     }\n  //   )\n  //     .then((response) => response.text())\n  //     .catch((error) => console.log(\"error\", error));\n  // };\n\n  // const onChangeHandler = (removedShifter) => {\n  //   setDeletedShifter(removedShifter);\n  // };\n\n  // const slackHandler = (text) => {\n  //   setScheduleText(text);\n  // };\n\n  // return (\n  //   <Container>\n  //     <Tabs>\n  //       <Shifter data={whoWork} onChange={onChangeHandler} />\n  //     </Tabs>\n  //     <TextTabs>\n  //       <ShifterText data={whoWork} slack={slackHandler} />\n  //     </TextTabs>\n  //     <Button onClick={onButtonClickHandler}>\n  //       <ButtonText> Send to Slack</ButtonText>\n  //     </Button>\n  //   </Container>\n  // );\n};\n\nexport default Items;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,uBANP;;AAQA,MAAMC,KAAK,GAAIC,KAAD,IAAW,CACvB;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CAzED;;KAAMD,K;AA2EN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}