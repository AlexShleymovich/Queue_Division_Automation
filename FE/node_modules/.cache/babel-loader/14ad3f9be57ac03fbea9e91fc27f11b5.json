{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserAgent = exports.addAppMetadata = void 0;\n\nconst os = __importStar(require(\"os\"));\n\nconst path_1 = require(\"path\"); // eslint-disable-next-line @typescript-eslint/no-var-requires, import/no-commonjs\n\n\nconst packageJson = require('../package.json');\n/**\n * Replaces occurrences of '/' with ':' in a string, since '/' is meaningful inside User-Agent strings as a separator.\n */\n\n\nfunction replaceSlashes(s) {\n  return s.replace('/', ':');\n} // TODO: for the deno build (see the `npm run build:deno` npm run script), we could replace the `os-browserify` npm\n// module shim with our own shim leveraging the deno beta compatibility layer for node's `os` module (for more info\n// see https://deno.land/std@0.116.0/node/os.ts). At the time of writing this TODO (2021/11/25), this required deno\n// v1.16.2 and use of the --unstable flag. Once support for this exists without the --unstable flag, we can improve\n// the `os` module deno shim to correctly report operating system from a deno runtime. Until then, the below `os`-\n// based code will report \"browser/undefined\" from a deno runtime.\n\n\nconst baseUserAgent = `${replaceSlashes(packageJson.name)}/${packageJson.version} ` + `${(0, path_1.basename)(process.title)}/${process.version.replace('v', '')} ` + `${os.platform()}/${os.release()}`;\nconst appMetadata = {};\n/**\n * Appends the app metadata into the User-Agent value\n * @param appMetadata.name - name of tool to be counted in instrumentation\n * @param appMetadata.version - version of tool to be counted in instrumentation\n */\n\nfunction addAppMetadata(_ref) {\n  let {\n    name,\n    version\n  } = _ref;\n  appMetadata[replaceSlashes(name)] = version;\n}\n\nexports.addAppMetadata = addAppMetadata;\n/**\n * Returns the current User-Agent value for instrumentation\n */\n\nfunction getUserAgent() {\n  const appIdentifier = Object.entries(appMetadata).map(_ref2 => {\n    let [name, version] = _ref2;\n    return `${name}/${version}`;\n  }).join(' '); // only prepend the appIdentifier when its not empty\n\n  return (appIdentifier.length > 0 ? `${appIdentifier} ` : '') + baseUserAgent;\n}\n\nexports.getUserAgent = getUserAgent;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,+B,CAEA;;;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,iBAAD,CAA3B;AAEA;;;;;AAGA,SAASC,cAAT,CAAwBC,CAAxB,EAAiC;EAC/B,OAAOA,CAAC,CAACC,OAAF,CAAU,GAAV,EAAe,GAAf,CAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,aAAa,GAAG,GAAGH,cAAc,CAACF,WAAW,CAACM,IAAb,CAAkB,IAAIN,WAAW,CAACO,OAAO,GAA1D,GACA,GAAG,qBAASC,OAAO,CAACC,KAAjB,CAAuB,IAAID,OAAO,CAACD,OAAR,CAAgBH,OAAhB,CAAwB,GAAxB,EAA6B,EAA7B,CAAgC,GAD9D,GAEA,GAAGM,EAAE,CAACC,QAAH,EAAa,IAAID,EAAE,CAACE,OAAH,EAAY,EAFtD;AAIA,MAAMC,WAAW,GAA8B,EAA/C;AAEA;;;;;;AAKA,SAAgBC,cAAhB,OAAmF;EAAA,IAApD;IAAER,IAAF;IAAQC;EAAR,CAAoD;EACjFM,WAAW,CAACX,cAAc,CAACI,IAAD,CAAf,CAAX,GAAoCC,OAApC;AACD;;AAFDQ;AAIA;;;;AAGA,SAAgBC,YAAhB,GAA4B;EAC1B,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAeN,WAAf,EAA4BO,GAA5B,CAAgC;IAAA,IAAC,CAACd,IAAD,EAAOC,OAAP,CAAD;IAAA,OAAqB,GAAGD,IAAI,IAAIC,OAAO,EAAvC;EAAA,CAAhC,EAA2Ec,IAA3E,CAAgF,GAAhF,CAAtB,CAD0B,CAE1B;;EACA,OAAO,CAAEJ,aAAa,CAACK,MAAd,GAAuB,CAAxB,GAA6B,GAAGL,aAAa,GAA7C,GAAmD,EAApD,IAA0DZ,aAAjE;AACD;;AAJDU","names":["packageJson","require","replaceSlashes","s","replace","baseUserAgent","name","version","process","title","os","platform","release","appMetadata","addAppMetadata","exports","getUserAgent","appIdentifier","Object","entries","map","join","length"],"sourceRoot":"","sources":["../src/instrument.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}