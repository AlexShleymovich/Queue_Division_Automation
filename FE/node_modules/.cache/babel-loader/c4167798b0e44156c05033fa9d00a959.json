{"ast":null,"code":"var _jsxFileName = \"/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/ShifterText.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, ListItems, H3, Icon } from \"./Styles/ShifterText.styled\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { Tooltip } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShifterText = props => {\n  _s();\n\n  const [shifters, setShifters] = useState(props.data);\n  useEffect(() => {\n    setShifters(props.data);\n  }, [props]);\n\n  const sufix = date => {\n    if (date > 20 || date < 10) {\n      switch (date % 10) {\n        case 1:\n          return \"st\";\n\n        case 2:\n          return \"nd\";\n\n        case 3:\n          return \"rd\";\n\n        default:\n          return \"th\";\n      }\n    }\n  };\n\n  const dateBuilder = () => {\n    const newDate = new Date();\n    const options = {\n      weekday: \"long\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    const myDate = new Intl.DateTimeFormat(\"en-US\", options).format(newDate) + sufix(newDate.getDate());\n    return myDate;\n  };\n\n  const date_text = \"Queue Division - \" + dateBuilder() + \":\\n\\n\";\n  const shifters_text = shifters.map(shifter => \"*\" + String(shifter.employee) + \"*: \" + shifter.time).join(\"\\n\");\n  const reminder_text = \"\\n\\n:phone_green::phonecall: Please make sure you are all connected to Five9 :phone_green::phonecall:\";\n  props.slack(date_text + shifters_text + reminder_text);\n\n  const onClickHandler = () => {\n    navigator.clipboard.writeText(date_text + shifters_text + reminder_text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(H3, {\n        children: [\"Queue Division - \", dateBuilder(), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        onClick: onClickHandler,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), shifters.map(shifter => {\n      return /*#__PURE__*/_jsxDEV(ListItems, {\n        children: [shifter.employee, \": \", shifter.time]\n      }, shifter.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShifterText, \"Px7a49GnmBiZuv+X19zllkc2+vc=\");\n\n_c = ShifterText;\nexport default ShifterText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShifterText\");","map":{"version":3,"names":["React","useState","useEffect","Container","ListItems","H3","Icon","ContentCopyIcon","Tooltip","ShifterText","props","shifters","setShifters","data","sufix","date","dateBuilder","newDate","Date","options","weekday","month","day","myDate","Intl","DateTimeFormat","format","getDate","date_text","shifters_text","map","shifter","String","employee","time","join","reminder_text","slack","onClickHandler","navigator","clipboard","writeText","id"],"sources":["/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/ShifterText.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, ListItems, H3, Icon } from \"./Styles/ShifterText.styled\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { Tooltip } from \"@mui/material\";\n\nconst ShifterText = (props) => {\n  const [shifters, setShifters] = useState(props.data);\n\n  useEffect(() => {\n    setShifters(props.data);\n  }, [props]);\n\n  const sufix = (date) => {\n    if (date > 20 || date < 10) {\n      switch (date % 10) {\n        case 1:\n          return \"st\";\n        case 2:\n          return \"nd\";\n        case 3:\n          return \"rd\";\n        default:\n          return \"th\";\n      }\n    }\n  };\n\n  const dateBuilder = () => {\n    const newDate = new Date();\n    const options = { weekday: \"long\", month: \"long\", day: \"numeric\" };\n    const myDate =\n      new Intl.DateTimeFormat(\"en-US\", options).format(newDate) +\n      sufix(newDate.getDate());\n    return myDate;\n  };\n  const date_text = \"Queue Division - \" + dateBuilder() + \":\\n\\n\";\n  const shifters_text = shifters\n    .map((shifter) => \"*\" + String(shifter.employee) + \"*: \" + shifter.time)\n    .join(\"\\n\");\n  const reminder_text =\n    \"\\n\\n:phone_green::phonecall: Please make sure you are all connected to Five9 :phone_green::phonecall:\";\n\n  props.slack(date_text + shifters_text + reminder_text);\n  const onClickHandler = () => {\n    navigator.clipboard.writeText(date_text + shifters_text + reminder_text);\n  };\n\n  return (\n    <Container>\n      <div>\n        <H3>Queue Division - {dateBuilder()}:</H3>\n        <Icon onClick={onClickHandler}>\n          <Tooltip>\n            <ContentCopyIcon />\n          </Tooltip>\n        </Icon>\n      </div>\n      {shifters.map((shifter) => {\n        return (\n          <ListItems key={shifter.id}>\n            {shifter.employee}: {shifter.time}\n          </ListItems>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default ShifterText;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,EAA/B,EAAmCC,IAAnC,QAA+C,6BAA/C;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAASC,OAAT,QAAwB,eAAxB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACS,KAAK,CAACG,IAAP,CAAxC;EAEAX,SAAS,CAAC,MAAM;IACdU,WAAW,CAACF,KAAK,CAACG,IAAP,CAAX;EACD,CAFQ,EAEN,CAACH,KAAD,CAFM,CAAT;;EAIA,MAAMI,KAAK,GAAIC,IAAD,IAAU;IACtB,IAAIA,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAG,EAAxB,EAA4B;MAC1B,QAAQA,IAAI,GAAG,EAAf;QACE,KAAK,CAAL;UACE,OAAO,IAAP;;QACF,KAAK,CAAL;UACE,OAAO,IAAP;;QACF,KAAK,CAAL;UACE,OAAO,IAAP;;QACF;UACE,OAAO,IAAP;MARJ;IAUD;EACF,CAbD;;EAeA,MAAMC,WAAW,GAAG,MAAM;IACxB,MAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;IACA,MAAMC,OAAO,GAAG;MAAEC,OAAO,EAAE,MAAX;MAAmBC,KAAK,EAAE,MAA1B;MAAkCC,GAAG,EAAE;IAAvC,CAAhB;IACA,MAAMC,MAAM,GACV,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCN,OAAjC,EAA0CO,MAA1C,CAAiDT,OAAjD,IACAH,KAAK,CAACG,OAAO,CAACU,OAAR,EAAD,CAFP;IAGA,OAAOJ,MAAP;EACD,CAPD;;EAQA,MAAMK,SAAS,GAAG,sBAAsBZ,WAAW,EAAjC,GAAsC,OAAxD;EACA,MAAMa,aAAa,GAAGlB,QAAQ,CAC3BmB,GADmB,CACdC,OAAD,IAAa,MAAMC,MAAM,CAACD,OAAO,CAACE,QAAT,CAAZ,GAAiC,KAAjC,GAAyCF,OAAO,CAACG,IAD/C,EAEnBC,IAFmB,CAEd,IAFc,CAAtB;EAGA,MAAMC,aAAa,GACjB,uGADF;EAGA1B,KAAK,CAAC2B,KAAN,CAAYT,SAAS,GAAGC,aAAZ,GAA4BO,aAAxC;;EACA,MAAME,cAAc,GAAG,MAAM;IAC3BC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8Bb,SAAS,GAAGC,aAAZ,GAA4BO,aAA1D;EACD,CAFD;;EAIA,oBACE,QAAC,SAAD;IAAA,wBACE;MAAA,wBACE,QAAC,EAAD;QAAA,gCAAsBpB,WAAW,EAAjC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD;QAAM,OAAO,EAAEsB,cAAf;QAAA,uBACE,QAAC,OAAD;UAAA,uBACE,QAAC,eAAD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EASG3B,QAAQ,CAACmB,GAAT,CAAcC,OAAD,IAAa;MACzB,oBACE,QAAC,SAAD;QAAA,WACGA,OAAO,CAACE,QADX,QACuBF,OAAO,CAACG,IAD/B;MAAA,GAAgBH,OAAO,CAACW,EAAxB;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CANA,CATH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA7DD;;GAAMjC,W;;KAAAA,W;AA+DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}