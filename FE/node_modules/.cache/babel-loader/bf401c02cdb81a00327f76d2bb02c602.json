{"ast":null,"code":"var _jsxFileName = \"/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/Button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport \"./Button.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyButton = props => {\n  _s();\n\n  const [isClicked, setIsClicked] = useState(false);\n  const [isShown, setIsShown] = useState(false);\n\n  async function onClickHandler() {\n    setIsShown(true);\n\n    if (!isClicked) {\n      await fetch(\"http://127.0.0.1:5000\").then(response => {\n        return response.json();\n      }).then(data => {\n        setIsShown(false);\n        setIsClicked(true);\n        props.parsedData(data);\n      });\n    }\n  }\n\n  if (isShown) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myBtn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClickHandler,\n          variant: \"contained\",\n          style: {\n            borderRadius: 20,\n            backgroundColor: \"#2f98d8d6\",\n            maxWidth: \"7000px\",\n            maxHeight: \"100px\",\n            minWidth: \"500px\",\n            minHeight: \"50px\"\n          },\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myBtn\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickHandler,\n        variant: \"contained\",\n        style: {\n          borderRadius: 20,\n          backgroundColor: \"#2f98d8d6\",\n          maxWidth: \"7000px\",\n          maxHeight: \"100px\",\n          minWidth: \"500px\",\n          minHeight: \"50px\"\n        },\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(MyButton, \"9QjRu3ZjWXGsa7TyY1G4Q/IGgSk=\");\n\n_c = MyButton;\nexport default MyButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyButton\");","map":{"version":3,"names":["React","useState","Button","LinearProgress","MyButton","props","isClicked","setIsClicked","isShown","setIsShown","onClickHandler","fetch","then","response","json","data","parsedData","borderRadius","backgroundColor","maxWidth","maxHeight","minWidth","minHeight"],"sources":["/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/Button.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport \"./Button.css\";\n\nconst MyButton = (props) => {\n  const [isClicked, setIsClicked] = useState(false);\n  const [isShown, setIsShown] = useState(false);\n\n  async function onClickHandler() {\n    setIsShown(true);\n    if (!isClicked) {\n      await fetch(\"http://127.0.0.1:5000\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setIsShown(false);\n          setIsClicked(true);\n          props.parsedData(data);\n        });\n    }\n  }\n\n\n  if (isShown) {\n  return (\n    <div>\n      <LinearProgress />\n      <div className=\"myBtn\">\n        <Button\n          onClick={onClickHandler}\n          variant=\"contained\"\n          style={{\n            borderRadius: 20,\n            backgroundColor: \"#2f98d8d6\",\n            maxWidth: \"7000px\",\n            maxHeight: \"100px\",\n            minWidth: \"500px\",\n            minHeight: \"50px\",\n          }}\n        >\n          Start\n        </Button>\n      </div>\n    </div>\n  );\n  }\n  else {\n    return (\n      <div className=\"myBtn\">\n        <Button\n          onClick={onClickHandler}\n          variant=\"contained\"\n          style={{\n            borderRadius: 20,\n            backgroundColor: \"#2f98d8d6\",\n            maxWidth: \"7000px\",\n            maxHeight: \"100px\",\n            minWidth: \"500px\",\n            minHeight: \"50px\",\n          }}\n        >\n          Start\n        </Button>\n      </div>\n    );\n  }\n};\n\nexport default MyButton;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,eAAvC;AACA,OAAO,cAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;EAEA,eAAeS,cAAf,GAAgC;IAC9BD,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI,CAACH,SAAL,EAAgB;MACd,MAAMK,KAAK,CAAC,uBAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAc;QAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;MACD,CAHG,EAIHF,IAJG,CAIGG,IAAD,IAAU;QACdN,UAAU,CAAC,KAAD,CAAV;QACAF,YAAY,CAAC,IAAD,CAAZ;QACAF,KAAK,CAACW,UAAN,CAAiBD,IAAjB;MACD,CARG,CAAN;IASD;EACF;;EAGD,IAAIP,OAAJ,EAAa;IACb,oBACE;MAAA,wBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,OAAf;QAAA,uBACE,QAAC,MAAD;UACE,OAAO,EAAEE,cADX;UAEE,OAAO,EAAC,WAFV;UAGE,KAAK,EAAE;YACLO,YAAY,EAAE,EADT;YAELC,eAAe,EAAE,WAFZ;YAGLC,QAAQ,EAAE,QAHL;YAILC,SAAS,EAAE,OAJN;YAKLC,QAAQ,EAAE,OALL;YAMLC,SAAS,EAAE;UANN,CAHT;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAqBC,CAtBD,MAuBK;IACH,oBACE;MAAK,SAAS,EAAC,OAAf;MAAA,uBACE,QAAC,MAAD;QACE,OAAO,EAAEZ,cADX;QAEE,OAAO,EAAC,WAFV;QAGE,KAAK,EAAE;UACLO,YAAY,EAAE,EADT;UAELC,eAAe,EAAE,WAFZ;UAGLC,QAAQ,EAAE,QAHL;UAILC,SAAS,EAAE,OAJN;UAKLC,QAAQ,EAAE,OALL;UAMLC,SAAS,EAAE;QANN,CAHT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAkBD;AACF,CA/DD;;GAAMlB,Q;;KAAAA,Q;AAiEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}