{"ast":null,"code":"var _jsxFileName = \"/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/ShifterText.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShifterText = props => {\n  _s();\n\n  const [shifters, setShifters] = useState(props.data);\n  const newDate = new Date();\n  let date = newDate.getDate();\n  const options = {\n    weekday: \"long\",\n    month: \"long\",\n    day: \"numeric\"\n  };\n\n  const dateBuilder = date => {\n    if (date > 20 || date < 10) {\n      switch (date % 10) {\n        case 1:\n          return \"st\";\n\n        case 2:\n          return \"nd\";\n\n        case 3:\n          return \"rd\";\n\n        default:\n          return null;\n      }\n    }\n\n    return \"th\";\n  };\n\n  const myDate = new Intl.DateTimeFormat(\"en-US\", options).format(newDate);\n  console.log(myDate);\n  console.log(date);\n  console.log(dateBuilder(date));\n  useEffect(() => {\n    setShifters(props.data);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: shifters.map(shifter => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          gutterBottom: true,\n          children: [shifter.employee, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 34\n          }, this), shifter.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, shifter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShifterText, \"Px7a49GnmBiZuv+X19zllkc2+vc=\");\n\n_c = ShifterText;\nexport default ShifterText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShifterText\");","map":{"version":3,"names":["React","useState","useEffect","Typography","ShifterText","props","shifters","setShifters","data","newDate","Date","date","getDate","options","weekday","month","day","dateBuilder","myDate","Intl","DateTimeFormat","format","console","log","map","shifter","employee","time","id"],"sources":["/Users/alexshle/Desktop/Alex/Python/my_app_test/src/Components/ShifterText.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nconst ShifterText = (props) => {\n  const [shifters, setShifters] = useState(props.data);\n\n  const newDate = new Date();\n  let date = newDate.getDate();\n  const options = { weekday: \"long\", month: \"long\", day: \"numeric\" };\n\n  const dateBuilder = (date) => {\n    if (date > 20 || date < 10) {\n      switch (date % 10) {\n        case 1:\n          return \"st\";\n        case 2:\n          return \"nd\";\n        case 3:\n          return \"rd\";\n        default:\n          return null;\n      }\n    }\n    return \"th\";\n  };\n\n  const myDate = new Intl.DateTimeFormat(\"en-US\", options).format(newDate);\n  console.log(myDate);\n  console.log(date);\n  console.log(dateBuilder(date));\n\n  useEffect(() => {\n    setShifters(props.data);\n  }, [props]);\n\n  return (\n    <div>\n      {shifters.map((shifter) => {\n        return (\n          <div key={shifter.id}>\n            <Typography variant=\"body1\" gutterBottom>\n              {shifter.employee} <span> : </span>\n              {shifter.time}\n            </Typography>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ShifterText;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACI,KAAK,CAACG,IAAP,CAAxC;EAEA,MAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;EACA,IAAIC,IAAI,GAAGF,OAAO,CAACG,OAAR,EAAX;EACA,MAAMC,OAAO,GAAG;IAAEC,OAAO,EAAE,MAAX;IAAmBC,KAAK,EAAE,MAA1B;IAAkCC,GAAG,EAAE;EAAvC,CAAhB;;EAEA,MAAMC,WAAW,GAAIN,IAAD,IAAU;IAC5B,IAAIA,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAG,EAAxB,EAA4B;MAC1B,QAAQA,IAAI,GAAG,EAAf;QACE,KAAK,CAAL;UACE,OAAO,IAAP;;QACF,KAAK,CAAL;UACE,OAAO,IAAP;;QACF,KAAK,CAAL;UACE,OAAO,IAAP;;QACF;UACE,OAAO,IAAP;MARJ;IAUD;;IACD,OAAO,IAAP;EACD,CAdD;;EAgBA,MAAMO,MAAM,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCP,OAAjC,EAA0CQ,MAA1C,CAAiDZ,OAAjD,CAAf;EACAa,OAAO,CAACC,GAAR,CAAYL,MAAZ;EACAI,OAAO,CAACC,GAAR,CAAYZ,IAAZ;EACAW,OAAO,CAACC,GAAR,CAAYN,WAAW,CAACN,IAAD,CAAvB;EAEAT,SAAS,CAAC,MAAM;IACdK,WAAW,CAACF,KAAK,CAACG,IAAP,CAAX;EACD,CAFQ,EAEN,CAACH,KAAD,CAFM,CAAT;EAIA,oBACE;IAAA,UACGC,QAAQ,CAACkB,GAAT,CAAcC,OAAD,IAAa;MACzB,oBACE;QAAA,uBACE,QAAC,UAAD;UAAY,OAAO,EAAC,OAApB;UAA4B,YAAY,MAAxC;UAAA,WACGA,OAAO,CAACC,QADX,oBACqB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADrB,EAEGD,OAAO,CAACE,IAFX;QAAA;UAAA;UAAA;UAAA;QAAA;MADF,GAAUF,OAAO,CAACG,EAAlB;QAAA;QAAA;QAAA;MAAA,QADF;IAQD,CATA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA9CD;;GAAMxB,W;;KAAAA,W;AAgDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}