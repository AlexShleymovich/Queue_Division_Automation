{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLogger = exports.LogLevel = void 0;\n\nconst logger_1 = require(\"@slack/logger\");\n\nvar logger_2 = require(\"@slack/logger\");\n\nObject.defineProperty(exports, \"LogLevel\", {\n  enumerable: true,\n  get: function () {\n    return logger_2.LogLevel;\n  }\n});\nlet instanceCount = 0;\n/**\n * INTERNAL interface for getting or creating a named Logger.\n */\n\nfunction getLogger(name, level, existingLogger) {\n  // Get a unique ID for the logger.\n  const instanceId = instanceCount;\n  instanceCount += 1; // Set up the logger.\n\n  const logger = (() => {\n    if (existingLogger !== undefined) {\n      return existingLogger;\n    }\n\n    return new logger_1.ConsoleLogger();\n  })();\n\n  logger.setName(`web-api:${name}:${instanceId}`);\n\n  if (level !== undefined) {\n    logger.setLevel(level);\n  }\n\n  return logger;\n}\n\nexports.getLogger = getLogger;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AAAiBA;EAAAC;EAAAC;IAAA;EAAQ;AAAR;AAEjB,IAAIC,aAAa,GAAG,CAApB;AAEA;;;;AAGA,SAAgBC,SAAhB,CAA0BC,IAA1B,EAAwCC,KAAxC,EAAyDC,cAAzD,EAAgF;EAC9E;EACA,MAAMC,UAAU,GAAGL,aAAnB;EACAA,aAAa,IAAI,CAAjB,CAH8E,CAK9E;;EACA,MAAMM,MAAM,GAAW,CAAC,MAAK;IAC3B,IAAIF,cAAc,KAAKG,SAAvB,EAAkC;MAAE,OAAOH,cAAP;IAAwB;;IAC5D,OAAO,IAAII,sBAAJ,EAAP;EACD,CAHsB,GAAvB;;EAIAF,MAAM,CAACG,OAAP,CAAe,WAAWP,IAAI,IAAIG,UAAU,EAA5C;;EACA,IAAIF,KAAK,KAAKI,SAAd,EAAyB;IACvBD,MAAM,CAACI,QAAP,CAAgBP,KAAhB;EACD;;EAED,OAAOG,MAAP;AACD;;AAhBDK","names":["Object","enumerable","get","instanceCount","getLogger","name","level","existingLogger","instanceId","logger","undefined","logger_1","setName","setLevel","exports"],"sourceRoot":"","sources":["../src/logger.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}